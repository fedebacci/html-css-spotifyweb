/* RESET */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
/* Mettere come classe .img-fluid se necessario */
img {
    /* display: block; */
    max-width: 100%;
}
a {
    text-decoration: none;
    color: inherit;
}
ul {
    list-style-type: none;
}



/* DEBUG */
.debug ,
.debug * {
    /* min-width: 20px;
    min-height: 20px; */
    min-width: 10px;
    min-height: 10px;
    background-color: #ff000022;
    outline: 1px solid red;
}



/* ⚙️ VARIABILI ⚙️ */
:root {
    --col-spacing: 1rem;
    --sidebar-width: 3rem;
    --player-height: 5rem;
}



/* UTILS */
section {
    padding: calc(2 * var(--col-spacing)) 0;
}
.container {
    /* In questo caso serve senza max-width, ma non sto a creare container-fluid perchè sarebbe inutile avere entrambe le versioni */
    /* max-width: 1200px; */
    margin: 0 auto;
}
.row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 calc(var(--col-spacing) * -1); 
    row-gap: calc(2 * var(--col-spacing));
}
.row [class*="col"] {
    padding: 0 var(--col-spacing);
}
.row-no-gap {
    display: flex;
    flex-wrap: wrap;
    margin: 0;
    row-gap: 0;
}
.row-no-gap [class*="col"] {
    padding: 0;
}
.col-100 {
    width: 100%;
}
.col-1-2 {
    width: calc(100% / 2);
}
.col-1-3 {
    width: calc(100% / 3);
}
.col-2-3 {
    width: calc(100% / 3 * 2);
}
.col-1-4 {
    width: calc(100% / 4);
}
.col-3-4 {
    width: calc(100% / 4 * 3);
}
.col-1-5 {
    width: calc(100% / 5);
}
.col-4-5 {
    width: calc(100% / 5 * 4);
}
.col-1-6 {
    width: calc(100% / 6);
}
.col-5-6 {
    width: calc(100% / 6 * 5);
}
.btn {
    font-family: inherit;
    cursor: pointer;
    display: inline-block;
    background-color: transparent;
    border: 0;
    padding: .5rem 1rem;
}
.btn-outline {
    color: #fff;
    border: 1px solid;
    border-radius: 2rem;
}


/* MACROSTRUTTURA */
body {
    font-family: sans-serif;
    font-weight: 900;
    background-color: #141922;
    color: #A3A3A3;
}
h1,
h2,
h3,
h4,
h5,
h6 {
    color: #fff;
}
.page-wrapper {
    display: flex;
    flex-direction: column;
    height: 100vh;
    width: 100vw;
    overflow: hidden;
}
main {
    flex: 1 1 auto;

    display: flex;
    overflow: hidden;
}
#main-content {
    flex: 1 1 auto;

    overflow: auto;
}
#sidebar {
    background-color: #000000;
    flex: 0 0 auto;
    width: var(--sidebar-width);

    display: flex;
    flex-direction: column;
    justify-content: space-between;

    overflow: auto;

    /* Correzione: per avere effetto voci menu attive devo rimuovere padding dx e sx */
    /* padding: .75rem; */
    padding: .75rem 0;
}
#player {
    background-color: #282828;
    flex: 0 0 auto;
    height: var(--player-height);
}











/* #SIDEBAR */
/* @ TODO */
/* Incorporare il font size in modo generale sul body invece che su ogni singolo elemento */
#sidebar {
    font-size: .75rem;

    gap: .5rem;
}
/* Padding agli elementi interni della sidebar che sostituisce padding laterale della sidebar stessa */
#sidebar .logo,
#sidebar .sidebar-playlist,
#sidebar .sidebar-footer {
    padding: 0 .75rem;
}

#logo-big {
    display: none;
    max-width: 10rem;
    /* Test movimento sticky, eventualmente da fare in metodo Web App */
    /* position: sticky;
    padding-bottom: 1rem;
    top: 0;
    background-color: #000; */
}
#logo-small {
    /* Correzione. lo gestisco tramite gap di #sidebar */
    /* margin-bottom: 1rem; */
    background-color: #000;
}
/* Correzione: rimozione sidebar-main ed inserimento dei suoi figli direttamente nella sidebar (Corretto con selettore subito sotto a quello commentato) */
/* .sidebar-main nav a, */
#sidebar nav a,
.install-app,
.profile {
    display: flex;
    align-items: center;
    gap: .5rem;
}
/* Correzione: lo gestisco tramite gap di sidebar */
/* .sidebar-menu {
    margin: 2rem 0;
} */
/* DEBUG TMP, non dovrebbe servire */
/* .sidebar-playlist {
    margin: 0 0 2rem;
} */
.sidebar-menu ul,
.sidebar-playlist ul {
    display: flex;
    flex-direction: column;

    /* Correzione: utilizzo del text-align per allineare gli elementi mantenendoli stretchati (necessario per classe .active) */
    /* align-items: center; */
    text-align: center;
}
.sidebar-menu ul {
    gap: .5rem;
}
.sidebar-menu ul li {
    padding-left: .75rem;
}
.sidebar-menu ul li.active {
    color: #fff;
}
.sidebar-menu ul img {
    width: 1.5rem;
}
.sidebar-menu .label {
    display: none;
}
.sidebar-playlist {
    display: none;

    /* @ TEST */
    /* @ SPOSTARE SICURAMENTE OVERFLOW, forse anche min-height */
    min-height: 150px;
    overflow: hidden;
}
.add-playlist {
    display: flex;
    align-items: center;
    gap: .5rem;
    padding: .5rem 0;
}
.add-playlist span {
    font-size: 1.5rem;
    font-weight: bold;
    color: #000;
    background-color: #A3A3A3;
    width: 2rem;
    aspect-ratio: 1/1;
    display: flex;
    justify-content: center;
    align-items: center;
}
.sidebar-playlist nav.playlists {
    height: 100%;
}
.sidebar-playlist ul {
    height: 100%;
    overflow: auto;
    gap: 1rem;
}
.sidebar-playlist li:first-child {
    padding: 1rem 0 0;
}
.sidebar-footer {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: .5rem;

    /* Come da correzione, rimuovendo il sidebar-main vado a dare margin-top: auto */
    /* margin-top: 3rem; */
    margin-top: auto;

    /* DEBUG */
    /* margin-top: 7rem; */
}
.sidebar-footer .label {
    display: none;
}
.install-app img {
    width: 1rem;
}
.profile-picture {
    background-color: #808080;
    width: 1.5rem;
    aspect-ratio: 1/1;
    border-radius: 50%;
    overflow: hidden;
}





/* #PLAYER */
/* Struttura flex Player */
#player {
    padding: 0 .25rem;
    display: flex;

    /* Da correzione */
    gap: .5rem;
    justify-content: space-between;
    align-items: center;
}
#player .current-song,
#player .player-controls,
#player .player-options {
    /* @ TODO */
    /* @ Testare, come in correzione, 1 1 0 */
    /* @ E magari dare grow: 2 ai controlli su schermi più grandi */
    /* flex: 1 0 0; */
    flex: 1 1 0;
}
/* Implementazione del controllo delle dimensioni dei primogeniti laterali per soluzione consigliata da Tiziano */
#player .current-song,
#player .player-options {
    max-width: 250px;
}
#player .player-controls {
    max-width: 400px;
}
#player .current-song,
#player .song-info,
#player .player-controls,
#player .control-buttons,
#player .song-times,
#player .player-options {
    display: flex;
    align-items: center;
}
#player .player-controls {
    flex-direction: column;
    justify-content: space-evenly;
    gap: .5rem;
}
#player .control-buttons,
#player .control-bar {
    justify-content: center;
}
#player .player-options {
    justify-content: flex-end;
    flex-wrap: wrap;
}
/* Tutto il Resto sul player */
#player .current-song {
    gap: .5rem;
}
#player .song-info {
    gap: .5rem;
    /* Correzione, personalmente non userei a meno di non controllare la dimensione del primo figlio primogenito del player (altrimenti a volte sembra parte dei controlli centrali invece che dei dettagli della canzone a sx) */
    /* Lo implemento ed implemento sopra la soluzione consigliata per il controllo delle dimensioni dei primogeniti laterali */
    flex-grow: 1;
}
/* Correggo sotto con versione più flessibile */
/* #player .song-media {
    width: 25px;
} */
#player .song-media img {
    display: block;
    max-height: 50px;
}
#player .song-details {
    font-size: .6rem;

    /* Correzione */
    flex-grow: 1;
}
#player .song-details {
    overflow: hidden;
}
#player .song-details div {
    overflow: hidden;
    text-overflow: ellipsis;
    /* La regola sotto dovrebbe essere obbligatoria per MDN, ma commentandola l'effetto funziona */
    /* white-space: nowrap; */
}
#player .song-actions i,
#player .player-options i {
    font-size: .75rem;
}
#player .control-buttons {
    align-items: center;
    gap: 1rem;
}
/* Gestione della dimensione delle icone (e della differenza con icona centrale) senza inseriment classe font-awesome. Corretto aggiungendo la classe e la regola subito sotto */
/* #player i:not(.fa-circle-play) {
    font-size: .75rem;
}
#player i.fa-circle-play {
    font-size: 1.25rem;
} */
#player .player-controls {
    font-size: .75rem;
}
#player .song-times {
    gap: .33rem;
    width: 90%;
    justify-content: space-between;

    /* Correzione */
    justify-content: center;
    align-items: center;
}
#player .song-times .song-time {
    font-size: .5rem;
}

#player .bar {
    height: 4px;
    border-radius: 4px;
    background-color: #595959;
    flex-shrink: 0;

    /* Soluzione per gestire fluidamente le progress bar, da associare a max-width su primogenito centrale (Quindi rimuovere width) */
    flex-grow: 1;
    /* Provo ad aggiungere max-width solo a barra del tempo */
    /* NB: in correzione max-width data sui player-controls, non a barra */
    /* max-width: 50%; */
}
/* #player .control-bar {
    width: 50%;
}
#player .volume-bar {
    width: 33%;
} */
#player .bar .bar-inside {
    border-radius: 4px;
    width: 50%;
    height: 100%;
    background-color: #C5C5C5;
}

#player .player-options {
    gap: .5rem;
}



/* #MAIN-CONTENT */
/* @ TODO */
/* Incorporare il font size in modo generale sul body invece che su ogni singolo elemento */
#main-content {
    /* font-size: .75rem; */
    font-size: .6rem;
}
#main-content .upgrade-app {
    /* Campionato */
    /* background-color: #0F141D; */
    /* Realistico */
    background-color: rgba(0,0,0,0.33);
    padding: 1rem .25rem;
    text-align: right;
}
.btn-upgrade-app {
    text-transform: uppercase;

    padding: .5rem 2rem;;

    /* @todo */
    /* capire come mai non le eredita dal body */
    font-weight: 900;
    font-size: .6rem;
}

#main-content #main-content-menu  {
    padding: .75rem;
}
#main-content #main-content-menu ul {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    /* gap: .5rem; */
    row-gap: 1rem;
}
#main-content #main-content-menu a {
    text-transform: uppercase;
    font-weight: 600;
    padding: .75rem;

    /* debug */
    /* border: 1px solid; */
}

/* Non faccio classe apposita perchè non ho altri container da altre parti */
#main-content .container {
    --col-spacing: .25rem;
    padding-left: 1rem;
    padding-right: 1rem;
    margin-bottom: .5rem;
}
#main-content .container .row {
    row-gap: .5rem;
    margin: 0;
}
/* Modifico sul container invece che su h2 per non dover gestire presenza/assenza sottotitolo */
#main-content .container {
    margin: 2rem 0;
}
#main-content #main-content-menu + .container {
    margin: 1rem 0 2rem;
}
/* Aggiungo margine a titolo che collassa se sottotitolo non presente e rimane se sottotitolo presente */
#main-content h2 {
    margin-bottom: .5rem;
    font-size: 1.25rem;
}
#main-content .song-card {
    text-align: center;
}
#main-content .song-card h3 {
    font-size: .9rem;
}









/* SMALL */
@media screen and (min-width: 576px) {
    :root {
        --sidebar-width: 15rem;
    }
    /* #SIDEBAR */
    #sidebar {
        gap: 2rem;
    }
    #logo-big {
        display: block;
    }
    #logo-small {
        display: none;
    }
    .sidebar-menu ul li.active {
        border-left: 5px solid green;
        padding-left: calc(.75rem - 5px);
    }
    .sidebar-playlist {
        display: block;
    }
    .sidebar-menu ul,
    .sidebar-playlist ul,
    .sidebar-footer {
        align-items: flex-start;
    }
    .sidebar-menu .label,
    .sidebar-footer .label {
        display: inline-block;
    }



    /* #PLAYER */
    #player .song-details :not(:first-child) {
        display: inline-block;
    }
    #player .player-controls {
        flex-grow: 2;
    }
    /* Corretto con max-height, questo step non serve più */
    /* #player .song-media {
        width: 50px;
    } */
}



/* MEDIUM */
@media screen and (min-width: 768px) {
    /* #UTILITY */
    .col-md-1-4 {
        width: calc(100% / 4);
    }



    /* #SIDEBAR */



    /* #PLAYER */
    #player .song-actions div {
        display: inline-block;
    }
}








/* LARGE */
@media screen and (min-width: 992px) {
    /* #UTILITY */
    .col-lg-1-6 {
        width: calc(100% / 6);
    }




    /* #SIDEBAR */
}